{
  "id": "beneficial-ownership-statements.json",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "statementGroups": {
      "title": "Statement group",
      "description": "A statement group is used to collect together statements relating to a particular disclosure, company or individual. Statement groups are a logical grouping designed to limit duplication of provenance information, and bring together statements that contain cross references. Where statements in a statementGroup cross-references to other statements, those statements MUST also be contained within the group.",
      "type": "array",
      "items": {
        "type": "object",
        "title": "Statement group",
        "required": [
          "beneficialOwnershipStatements",
          "id"
        ],
        "properties": {
          "id": {
            "title": "Statement group identifier",
            "description": "An optional globally unique and persistent identifier for this statement group.",
            "$ref": "#/definitions/ID"
          },
          "beneficialOwnershipStatements": {
            "title": "Beneficial ownership statements",
            "description": "A collection of statements that describe the relationship between legal entities or between legal entities and natural persons, or that explain the non-availability of this information. Entity, person, qualification and provenance statements may be embeded within these statements, or provided in the neighbouring arrays and cross-referenced.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/BeneficialOwnershipStatement"
            }
          },
          "entityStatements": {
            "title": "Entity statements",
            "description": "A collection of statements that describe legal persons or arrangements. Cross-referenced within beneficial ownership statements.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/EntityStatement"
            }
          },
          "personStatements": {
            "title": "Person statements",
            "description": "A collection of statements that describe natural persons. Cross-referenced within beneficial ownership statements.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/PersonStatement"
            }
          },
          "source": {
            "title":"Source",
            "description":"The source of statements in this statement group.",
            "$ref": "#/definitions/Source"
          },
          "replacesStatementGroup": {
            "title": "Replaces statement group",
            "description": "If this statement group replaces all the statements from a previously published group, provide the globally unique identifier for the previous group here. Consuming applications are advised to mark all statements from the identified group as no longer active.",
            "type": "string"
          }
        }
      }
    }
  },
  "definitions": {
    "BeneficialOwnershipStatement": {
      "title": "Beneficial Ownership Statement",
      "description": "A beneficial ownership statement is made up of an entity, an interested party (a reference to an entity, natural person, arrangement or trust), details of the interest and provenance information.",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/ID"
        },
        "statementDate": {
          "$ref": "#/definitions/StatementDate"
        },
        "entity": {
          "title":"Entity",
          "description":"This entity is the subject of a beneficial ownership relationship.",
          "oneOf": [
            {
              "$ref": "#/definitions/EntityStatementReference"
            }
          ]
        },
        "interestedParty": {
          "title":"Interested party",
          "description":"The interested party has some level of ownership or control over the entity referenced in this beneficial ownership statement.",
          "type": "object",
          "oneOf": [
            {
              "properties": {
                "entity": {
                  "$ref": "#/definitions/EntityStatement"
                }
              }
            },
            {
              "properties": {
                "person": {
                  "$ref": "#/definitions/PersonStatement"
                }
              }
            }
          ]
        },
        "interests": {
          "title": "Interests",
          "description": "A description of the interests held by the interestedParty covered by this statement in the entity covered by this statement.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Interest"
          }
        },
        "source": {
          "title":"Source",
          "description":"The source of the information that links the entity and the interested party, or that supports a null statement.",
          "$ref": "#/definitions/Source"
        },
        "replacesStatement": {
          "$ref": "#/definitions/ReplacesStatement"
        }
      },
            "required": ["id"]
    },
    "EntityStatementReference": {
      "title": "Entity statement reference",
      "description": "Where entity, person and provenance statements are not nested within the beneficial ownership statement, they may be cross-referenced using a Statement Reference.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "What type of statement is being referred to?",
          "type": "string",
          "enum": [
            "entityStatement"
          ]
        },
        "id": {
          "title": "ID",
          "description": "The identifier of the statement being referenced.",
          "$ref": "#/definitions/ID"
        },
        "uri": {
          "title": "URI",
          "description": "A persistent URI for the statement being referenced.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "PersonStatementReference": {
      "title": "Person statement reference",
      "description": "Where entity, person and provenance statements are not nested within the beneficial ownership statement, they may be cross-referenced using a Statement Reference.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "What type of statement is being referred to?",
          "type": "string",
          "enum": [
            "personStatement"
          ]
        },
        "id": {
          "title": "ID",
          "description": "The identifier of the statement being referenced.",
          "$ref": "#/definitions/ID"
        },
        "uri": {
          "title": "URI",
          "description": "A persistent URI for the statement being referenced.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "EntityStatement": {
      "title": "Entity statement",
      "description": "A statement identifying and describing the entity that is the subject of the ownership or control described in a beneficial ownership statement.",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/ID"
        },
        "statementDate": {
          "$ref": "#/definitions/StatementDate"
        },
        "type": {
          "title": "Type",
          "description": "What kind of entity is this? The 'registeredEntity' code covers any legal entity created through an act of official registration, usually resulting in an identifier being assigned to the entity. The 'legalEntity' code covers other bodies with distinct legal personality (government departments, international institutions etc.).  The 'arrangement' code covers artificial entities, described in the data model for the purpose of associating one or more natural or legal persons together in an ownership or control relationship, but without implying that the parties to this arrangement have any other form of collective legal identity.",
          "type": "string",
          "enum": [
            "registeredEntity",
            "legalEntity",
            "arrangement",
            "anonymousEntity",
            "unknownEntity"
          ]
        },
        "missingInfoReason": {
          "title": "Missing information reason(s)",
          "description": "For EntityStatements with the type 'anonymousEntity' or 'unknownEntity' this field should contain an explanation of the reason that detailed information on the entity is not provided. This may be a standard descriptive phrase from the source system, or a free-text justification.",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "The declared name of this entity.",
          "type": "string"
        },
        "jurisdiction": {
          "title": "Jurisdiction",
          "description": "The jurisdiction in which this entity is registered, expressed using an ISO ISO_3166-2 2-Digit country code, or ISO_3166-2 sub-division code, where the sub-division in question (e.g. a sub-national state or region) has relevant jurisdiction over the registration of operation of this entity.",
          "type": "string",
          "minLength": 2,
          "maxLength": 10
        },
        "identifiers": {
          "title": "Identifiers",
          "description": "One or more official identifiers for this entity. Where available, official registration numbers should be provided.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "foundingDate": {
          "title": "Created date",
          "description": "When was this entity founded, created or registered. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
        },
        "dissolutionDate": {
          "title": "End date",
          "description": "If this entity is no longer active, provide the date on which it was disolved or ceased. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
        },
        "addresses": {
          "title": "Addresses",
          "description": "One or more addresses for this entity.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "uri": {
          "title": "URI",
          "description": "Where a [persistent URI](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) is available for this entity this should be included.",
          "type": "string",
          "format": "uri"
        },
        "source": {
          "title":"Source",
          "description":"The source of information about this entity.",
          "$ref": "#/definitions/Source"
        },
        "replacesStatement": {
          "$ref": "#/definitions/ReplacesStatement"
        }
      }
    },
    "PersonStatement": {
      "title": "Person statement",
      "description": "A person statement describes the information known about a natural person at a particular point in time, or from a given submission of information",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/ID"
        },
        "statementDate": {
          "$ref": "#/definitions/StatementDate"
        },
        "type": {
          "title": "Type",
          "description": "The ultimate beneficial owner of a legal entity is always a natural person. Where the beneficial owner has been identified, by information about them cannot be disclosed, use 'anonymousPerson'. Where the beneficial owner has not been clearly identified, use 'unknownPerson'.",
          "type": "string",
          "enum": [
            "naturalPerson",
            "anonymousPerson",
            "unknownPerson"
          ]
        },
        "missingInfoReason": {
          "title": "Missing information reason(s)",
          "description": "For PersonStatements with the type 'anonymousPerson' or 'unknownPerson' this field should contain an explanation of the reason that detailed information on the person is not provided. This may be a standard descriptive phrase from the source system, or a free-text justification.",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "The full name of this person.",
          "type": "string"
        },
        "alternateNames": {
          "title": "Alternate names",
          "description": "Other known names for this individual.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlternateName"
          }
        },
        "identifiers": {
          "title": "Identifiers",
          "description": "One or more official identifiers for this perrson. Where available, official registration numbers should be provided.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "nationalities": {
          "title": "Nationality",
          "description": "An array of ISO 2-Digit country codes representing nationalities held by this individual.",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "placeOfResidence": {
          "$ref": "#/definitions/Address"
        },
        "placeOfBirth": {
          "$ref": "#/definitions/Address"
        },
        "birthDate": {
          "title": "Created date",
          "description": "The date of birth for this individual. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
        },
        "deathDate": {
          "title": "End date",
          "description": "If this individual is no longer alive, provide their date of death. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
        },
        "addresses": {
          "title": "Addresses",
          "description": "One or more addresses for this entity.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "source": {
          "title":"Source",
          "description":"The source of information about this person.",
          "$ref": "#/definitions/Source"
        },
        "replacesStatement": {
          "$ref": "#/definitions/ReplacesStatement"
        }
      }
    },
    "NullParty": {
      "title": "Null party",
      "description": "When confirmation has been provided that no beneficial owners exist, or beneficial ownership information does not need to be provided, then a null party entry should be included.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Reason",
          "description": "The reason for this null statement.",
          "type": "string",
          "enum": [
            "unknown",
            "noBeneficialOwners",
            "noNotifiableOwners"
          ]
        },
        "description": {
          "title": "Description",
          "description": "Any supporting information about the absence of a confirmed beneficial owner. This field may be used to provide set phrases from a source system, or for a free-text explanation.",
          "type": "string"
        }
      }
    },
    "Source": {
      "title": "Statement source",
      "description": "The source object is used to provide basic provenance information about a group of statements or a single statement.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Source type",
          "description":"What type of source is this? Multiple tags can be combined.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "selfDeclaration",
              "officialRegister",
              "thirdParty",
              "primaryResearch",
              "verified"
            ]
          }
        },
        "description": {
          "title": "Description",
          "description": "Where required, additional free-text information about the source of this statement can be provided here.",
          "type": "string"
        },
        "url": {
          "title": "Source URL",
          "description": "If this information was fetched from an external URL, or a machine or human readable web page is available that provides addition information on how this statement was sourced, provide the URL.",
          "type": "string"
        },
        "retrievedAt": {
          "title": "Retrieved at",
          "description": "If this statement was imported from some external system, include a timestamp indicating when this took place. The statement's own date should be set based on the source information. ",
          "type": "string",
          "format": "datetime"
        },
        "assertedBy": {
          "title": "Asserted by",
          "description": "Who is making this statement? This may be the name of the person or organisation making a self-declaration (in which case, please make sure the name field matches the organisation or person name field), or the name or description of some other party. If this statment has been verified, this may also include the name of the organisation providing verification.",
          "type": "array",
          "items": {
            "$ref":"#/definitions/AssertingParty"
          }
        }
      }
    },
    "AssertingParty":{
      "type": "object",
            "title": "Asserting party",
            "description": "An individual, organisation or other entity making, or supporting, a given statement.",
            "properties": {
              "name": {
                "title": "Name",
                "description": "The name of the asserting party",
                "type": "string"
              },
              "uri": {
                "title": "URI",
                "description": "An optional URI to identify the asserting party.",
                "type": "string",
                "format": "uri"
              }
            }
    },
    "ReplacesStatement": {
      "title": "Replaces statement",
      "description": "If this statement replaces a previous statement, provide the globally unique identifier for the previous statement here. Consuming applications are advised to mark the identified statements as no longer active.",
      "type": "string"
    },
    "Identifier": {
      "title": "Identifier",
      "description": "An identifier that has been assigned to this entity. The scheme or list from which the identifier is drawn should be declared. ",
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "The identifier for this entity as provided in the declared scheme.",
          "type": "string"
        },
        "scheme": {
          "title": "Scheme",
          "description": "For entity statements, the scheme should be a entry from the [org-id.guide](http://www.org-id.guide) codelist. For person statements, recognised values include 'passport', 'internal' and 'id-card'.",
          "type": "string"
        },
        "uri": {
          "title": "URI",
          "description": "Where this identifier has a [canonical URI](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) this may be included",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "ID": {
      "title": "ID",
      "description": "A persistent globally unique identifier for this statement.",
      "type": "string",
      "minLength": 32
    },
    "StatementDate": {
      "title": "Statement date",
      "description": "The date on which this statement was made",
      "type": "string",
      "format": "date"
    },
    "Address": {
      "title": "Address",
      "description": "A free text address string, providing as much address data as is relevant, suitable for processing using address parsing algorithms. For some uses (for example, Place of Birth) only a town and country are required.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "What type of address is this?",
          "type": "string",
          "enum": [
            "placeOfBirth",
            "home",
            "residence",
            "registered",
            "service",
            "alternative"
          ]
        },
        "address": {
          "title": "Address",
          "description": "The address, with each line or component of the address separated by a line-break or comma. This field may also include the postal code. ",
          "type": "string"
        },
        "postCode": {
          "title": "Postcode",
          "description": "The postal code for this address.",
          "type": "string"
        },
        "country": {
          "title": "Country",
          "description": "The ISO 2-Digit county code for this address.",
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        }
      }
    },
    "AlternateName": {
      "title": "Alternative name",
      "description": "An alternative known name for this individual. Names should be provided in fullName, and may optionally be broken down in the familyName, givenName and patronymicName fields, based on the EC ISA Core Person Vocabulary definitions.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "What kind of alternative name is this?",
          "type": "string",
          "enum": [
            "detailed",
            "translation",
            "former",
            "alias",
            "birth"
          ]
        },
        "fullName": {
          "title": "Full name",
          "description": "The full name contains the complete name of a person as one string.",
          "type": "string"
        },
        "familyName": {
          "title": "Family name",
          "description": "A family name is usually shared by members of a family. This attribute also carries prefixes or suffixes which are part of the Family Name, e.g. 'de Boer', 'van de Putte', 'von und zu Orlow'. Multiple family names, such as are commonly found in Hispanic countries, are recorded in the single Family Name field so that, for example, Miguel de Cervantes Saavedra's Family Name would be recorded as 'Cervantes Saavedra.'",
          "type": "string"
        },
        "givenName": {
          "title": "Given names",
          "description": "A given name, or multiple given names, are the denominator(s) that identify an individual within a family. These are given to a person by his or her parents at birth or may be legally recognised as 'given names' through a formal process. All given names are ordered in one field so that, for example, the given name for Johann Sebastian Bach is 'Johann Sebastian.'",
          "type": "string"
        },
        "patronymicName": {
          "title": "Patronymic Name",
          "description": "Patronymic names are important in some countries. Iceland does not have a concept of family name in the way that many other European countries do, for example. In Bulgaria and Russia, patronymic names are in every day usage, for example, the 'Sergeyevich' in 'Mikhail Sergeyevich Gorbachev'",
          "type": "string"
        }
      }
    },
    "Interest": {
      "title": "Interest",
      "description": "A description of the interest held by an interestedParty in another entity.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type of interest",
          "description": "A codelist value indicating the nature of the interest.",
          "type": "string",
          "enum": [
            "shareholding",
            "voting-rights",
            "appointment-of-board",
            "influence-or-control"
          ]
        },
        "interestLevel": {
          "title": "Interest level",
          "description": "Is this interest held directly or indirectly?",
          "type": "string",
          "enum": [
            "direct",
            "indirect",
            "unknown"
          ]
        },
        "details": {
          "title": "Details",
          "description": "This field may be used to provide the local name given to this kind of interest, or any further semi-structured or unstructured information to clarify the nature of the interest held.",
          "type": "string"
        },
        "annotations": {
          "title": "Annotations",
          "description": "Any further details to qualify this interest.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "share": {
          "title": "Percentage share",
          "description": "Where an exact percentage is available, this should be given, and maximum and minimum values set to the same as the exact percentage. Otherwise, maximum and minimum can be used to record the range into which the share of this kind of interest falls.",
          "type": "object",
          "properties": {
            "exact": {
              "title": "Exact share",
              "description": "The exact share of this interest held (where available).",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "maximum": {
              "title": "Maximum share",
              "description": "The upper bound of the share of this interest known to be held.",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "minimum": {
              "title": "Minimum share",
              "description": "The lower bound of the share of this interest known to be held.",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "exclusiveMinimum": {
              "title": "Exclusive minimum",
              "description": "If exclusiveMinimum is true, then the share is at least greater than the minimum value given. E.g. if minimum is 25, the share is at least 25.1, and not simply 25.",
              "type": "boolean",
              "default": false
            },
            "exclusiveMaximum": {
              "title": "Exclusive maximum",
              "description": "If exclusiveMaximum is true, then the share is at least less than the maximum value given. E.g. if maximum is 50, the share is less than 49.999, and not simply 50.",
              "type": "boolean",
              "default": false
            }
          }
        },
        "startDate": {
          "title": "State date",
          "description": "When did this interest first occur. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
        },
        "endDate": {
          "title": "End date",
          "description": "When did this interest cease. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
        }
      }
    },
    "Annotation": {
      "title": "Annotation",
      "description": "Annotations can be provided in free-text. Additional extended properties can be included on the annotation object to provide structured data if required.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "Description",
          "description": "A free-text description to annotate this interest."
        }
      }
    }
  }
}