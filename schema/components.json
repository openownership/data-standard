{
  "$id": "urn:components",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$comment": "This file contains generic components which are used in multiple places throughout the BODS schema. Components used only in Statement or one type of Record should be defined in their respective files.",
  "title": "Components",
  "description": "Types of object that can be used via $ref throughout the BODS schema.",
  "version": "0.4",
  "$defs": {
    "Address": {
      "title": "Address",
      "description": "A free text address string, providing as much address data as is relevant, suitable for processing using address parsing algorithms. For some uses (for example, Place of Birth) only a town and country are required.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "What type of address is this? See the addressType codelist.",
          "type": "string",
          "enum": [
            "residence",
            "registered",
            "service",
            "alternative",
            "business"
          ],
          "codelist": "addressType.csv",
          "openCodelist": false
        },
        "address": {
          "title": "Address",
          "description": "The address, with each line or component of the address separated by a line-break or comma. Where postal codes are isolated fields in source systems, this `address` field SHOULD NOT include the postal code.",
          "type": "string"
        },
        "postCode": {
          "title": "Postcode",
          "description": "The postal code for this address.",
          "type": "string"
        },
        "country": {
          "title": "Country",
          "description": "The 2-letter country code (ISO 3166-1) for this address.",
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        }
      }
    },
    "Country": {
      "title": "Country",
      "description": "A country MUST have a name. A country SHOULD have a 2-letter country code (ISO 3166-1)",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of the country",
          "type": "string"
        },
        "code": {
          "title": "Country code",
          "description": "The 2-letter country code (ISO 3166-1) for this country.",
          "type": "string",
          "maxLength": 2,
          "minLength": 2
        }
      },
      "required": [
        "name"
      ]
    },
    "Jurisdiction": {
      "title": "Jurisdiction",
      "description": "A jurisdiction MUST have a name. A jurisdiction SHOULD have the 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of the jurisdiction",
          "type": "string"
        },
        "code": {
          "title": "Country or subdivision code",
          "description": "The 2-letter country code (ISO 3166-1) or the subdivision code (ISO 3166-2) for the jurisdiction.",
          "type": "string",
          "maxLength": 6,
          "minLength": 2
        }
      },
      "required": [
        "name"
      ]
    },
    "Identifier": {
      "title": "Identifier",
      "description": "An identifier that has been assigned to this person or entity. The scheme or list from which the identifier is drawn should be declared.",
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "The identifier for this person or entity as provided in the declared scheme.",
          "type": "string"
        },
        "scheme": {
          "title": "Scheme",
          "description": "For entity statements, the scheme should be a entry from the org-id.guide (https://www.org-id.guide) codelist. For person statements, the scheme should have the pattern {JURISDICTION}-{TYPE} where JURISDICTION is an ISO 3-digit country code and TYPE is one of PASSPORT, TAXID or IDCARD. `scheme` or `schemeName` (or both) MUST be included in an Identifier object.",
          "type": "string"
        },
        "schemeName": {
          "title": "Scheme name",
          "description": "The name of this scheme, where the org-id code is unknown or only an unvalidated string is provided. `scheme` or `schemeName` (or both) MUST be included in an Identifier object.",
          "type": "string"
        },
        "uri": {
          "title": "URI",
          "description": "Where this identifier has a canonical URI (https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) this may be included",
          "type": "string",
          "format": "uri"
        }
      },
      "anyOf": [
        {
          "required": [
            "scheme"
          ]
        },
        {
          "required": [
            "schemeName"
          ]
        },
        {
          "required": [
            "scheme",
            "schemeName"
          ]
        }
      ]
    },
    "UnspecifiedRecord": {
      "title": "Unspecified or unknown person or entity",
      "description": "An explanation of why this person or entity is 'anonymous' or 'unknown'. A `reason` MUST be specified.",
      "type": "object",
      "properties": {
        "reason": {
          "title": "Reason",
          "description": "The reason that a person or entity cannot be specified, from the unspecifiedReason codelist.",
          "type": "string",
          "enum": [
            "noBeneficialOwners",
            "subjectUnableToConfirmOrIdentifyBeneficialOwner",
            "interestedPartyHasNotProvidedInformation",
            "subjectExemptFromDisclosure",
            "interestedPartyExemptFromDisclosure",
            "unknown",
            "informationUnknownToPublisher"
          ],
          "codelist": "unspecifiedReason.csv",
          "openCodelist": false
        },
        "description": {
          "title": "Description",
          "description": "Any supporting information about the absence of a confirmed beneficial owner. This field may be used to provide set phrases from a source system, or for a free-text explanation.",
          "type": "string"
        }
      },
      "required": [
        "reason"
      ]
    }
  }
}
