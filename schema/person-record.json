{
  "$id": "urn:person",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "version": "0.4",
  "type": "object",
  "title": "Person record details",
  "description": "Information about a natural person.",
  "properties": {
    "isComponent": {
      "title": "Is component",
      "description": "Whether this person represents a component of an indirect relationship. Where `isComponent` is 'true': (1) the `recordId` of this person MUST be an element in the `componentRecords` array of that primary Relationship statement, (2) this Person statement MUST come before that primary Relationship statement in a BODS package or stream, (3) the replacement of this Person statement SHOULD be considered when replacing the primary Relationship statement. The primary Relationship statement MUST have a `isComponent` value of 'false'.",
      "type": "boolean"
    },
    "personType": {
      "title": "Person type",
      "description": "Use the personType codelist. The ultimate beneficial owner of a legal entity is always a natural person. Where the beneficial owner has been identified, but information about them cannot be disclosed, use 'anonymousPerson'. Where the beneficial owner has not been clearly identified, use 'unknownPerson'. Where the beneficial owner has been identified use knownPerson. Where a person has the type 'anonymousPerson' or 'unknownPerson' a reason for the absence of information SHOULD be provided in 'unspecifiedPersonDetails')",
      "type": "string",
      "enum": [
        "anonymousPerson",
        "unknownPerson",
        "knownPerson"
      ],
      "propertyOrder": 4,
      "codelist": "personType.csv",
      "openCodelist": false
    },
    "unspecifiedPersonDetails": {
      "$ref": "urn:components#/$defs/UnspecifiedRecord"
    },
    "names": {
      "title": "Names",
      "description": "One or more known names for this individual.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/Name"
      },
      "propertyOrder": 10
    },
    "identifiers": {
      "title": "Identifiers",
      "description": "One or more official identifiers for this person. Where available, official registration numbers should be provided.",
      "type": "array",
      "items": {
        "$ref": "urn:components#/$defs/Identifier"
      },
      "propertyOrder": 20
    },
    "nationalities": {
      "title": "Nationality",
      "description": "An array of ISO 2-Digit country codes representing nationalities held by this individual.",
      "type": "array",
      "items": {
        "$ref": "urn:components#/$defs/Country"
      },
      "propertyOrder": 30
    },
    "placeOfBirth": {
      "title": "Place of birth",
      "propertyOrder": 40,
      "$ref": "urn:components#/$defs/Address"
    },
    "birthDate": {
      "title": "Date of birth",
      "description": "The date of birth for this individual, in YYYY, YYYY-MM, or YYYY-MM-DD format.",
      "type": "string",
      "anyOf": [
        {
          "pattern": "^(\\d{4})(-(1[0-2]|0[1-9]))?$"
        },
        {
          "format": "date"
        }
      ],
      "propertyOrder": 35
    },
    "deathDate": {
      "title": "Death date",
      "description": "The date of death for this individual, in YYYY, YYYY-MM, or YYYY-MM-DD format.",
      "type": "string",
      "anyOf": [
        {
          "pattern": "^(\\d{4})(-(1[0-2]|0[1-9]))?$"
        },
        {
          "format": "date"
        }
      ],
      "propertyOrder": 36
    },
    "placeOfResidence": {
      "title": "Place of residence",
      "propertyOrder": 50,
      "$ref": "urn:components#/$defs/Address"
    },
    "taxResidencies": {
      "title": "Tax residency",
      "description": "An array of Country objects representing the tax residencies held by this person.",
      "type": "array",
      "items": {
        "$ref": "urn:components#/$defs/Country"
      },
      "propertyOrder": 55
    },
    "addresses": {
      "title": "Addresses",
      "description": "One or more addresses for this entity.",
      "type": "array",
      "items": {
        "$ref": "urn:components#/$defs/Address"
      },
      "propertyOrder": 60
    },
    "politicalExposure": {
      "type": "object",
      "title": "Political exposure",
      "description": "Information about whether, and how, the person described by this statement is politically exposed. Use this property only if politically exposed person (PEP) declarations are expected as part of beneficial ownership declarations.",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "title": "Politically exposed person (PEP) status",
          "description": "This value is 'isPep' or 'isNotPep' according to whether the person described by this statement has the status of politically exposed person (PEP). An 'unknown' value means a PEP status declaration is expected but missing; the reason for the missing data SHOULD be supplied in the details array.",
          "enum": [
            "isPep",
            "isNotPep",
            "unknown"
          ]
        },
        "details": {
          "type": "array",
          "title": "Politically exposed person (PEP) details",
          "description": "One or more descriptions of this person's Politically Exposed Person (PEP) status.",
          "items": {
            "$ref": "#/$defs/PepStatusDetails"
          }
        }
      }
    }
  },
  "required": [
    "personType",
    "isComponent"
  ],
  "$defs": {
    "Name": {
      "title": "Name",
      "description": "A name by which this individual is known. Names should be provided in `fullName`, and may optionally be broken down in the `familyName`, `givenName` and `patronymicName` fields, based on the EC ISA Core Person Vocabulary (https://joinup.ec.europa.eu/solution/e-government-core-vocabularies) definitions.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "What kind of name is this? See the nameType codelist.",
          "type": "string",
          "enum": [
            "legal",
            "translation",
            "transliteration",
            "former",
            "alternative",
            "birth"
          ],
          "codelist": "nameType.csv",
          "openCodelist": false
        },
        "fullName": {
          "title": "Full name",
          "description": "The full name contains the complete name of a person as one string.",
          "type": "string"
        },
        "familyName": {
          "title": "Family name",
          "description": "A family name is usually shared by members of a family. This attribute also carries prefixes or suffixes which are part of the Family Name, e.g. 'de Boer', 'van de Putte', 'von und zu Orlow'. Multiple family names, such as are commonly found in Hispanic countries, are recorded in the single Family Name field so that, for example, Miguel de Cervantes Saavedra's Family Name would be recorded as 'de Cervantes Saavedra.'",
          "type": "string"
        },
        "givenName": {
          "title": "Given names",
          "description": "A given name, or multiple given names, are the denominator(s) that identify an individual within a family. These are given to a person by his or her parents at birth or may be legally recognised as 'given names' through a formal process. All given names are ordered in one field so that, for example, the given name for Johann Sebastian Bach is 'Johann Sebastian'.",
          "type": "string"
        },
        "patronymicName": {
          "title": "Patronymic Name",
          "description": "Patronymic names are important in some countries. Iceland does not have a concept of family name in the way that many other European countries do, for example. In Bulgaria and Russia, patronymic names are in every day usage, for example, the 'Sergeyevich' in 'Mikhail Sergeyevich Gorbachev'.",
          "type": "string"
        }
      }
    },
    "PepStatusDetails": {
      "title": "PEP Status",
      "description": "A description of a politically-exposed person status.",
      "type": "object",
      "properties": {
        "reason": {
          "title": "Reason",
          "description": "The reason for this person being declared a politically-exposed person.",
          "type": "string"
        },
        "missingInfoReason": {
          "title": "Missing information reason(s)",
          "description": "An explanation of the reason that PEP status for the person is not provided (i.e. `politicalExposure.status` is 'unknown'). This may be a standard descriptive phrase from the source system, or a free-text justification. Where this field is present it should be the only field except for `source`.",
          "type": "string"
        },
        "jurisdiction": {
          "title": "Jurisdiction",
          "description": "The jurisdiction where this person is a PEP.",
          "$ref": "urn:components#/$defs/Jurisdiction"
        },
        "startDate": {
          "title": "State date",
          "description": "The date from which this individual had the status of a Politically-exposed Person (PEP). The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the month. This rounding SHOULD be noted in accompanying guidance for users of the data.",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "title": "End date",
          "description": "The date from which this individual no longer had the status of a Politically-exposed Person (PEP). The date MUST be given in YYYY-MM-DD format. Where a precise month or date are unknown, the value may be rounded to the first day of the month. This rounding SHOULD be noted in accompanying guidance for users of the data..",
          "type": "string",
          "format": "date"
        },
        "source": {
          "title": "Source",
          "description": "The source of this PEP information",
          "$ref": "urn:statement#/$defs/Source"
        }
      }
    }
  }
}
