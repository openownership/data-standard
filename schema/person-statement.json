{
  "$id": "person-statement.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "version": "0.4",
  "type": "object",
  "title": "Person statement",
  "description": "A person statement describes the information known about a natural person at a particular point in time, or from a given submission of information",
  "properties": {
    "statementID": {
      "propertyOrder": 1,
      "$ref": "components.json#/$defs/ID"
    },
    "statementType": {
      "title": "Statement type",
      "description": "This MUST be 'personStatement'.",
      "type": "string",
      "propertyOrder": 2,
      "const": "personStatement"
    },
    "statementDate": {
      "propertyOrder": 3,
      "$ref": "components.json#/$defs/StatementDate"
    },
    "isComponent": {
      "title": "Is component",
      "description": "Does this Person Statement represent a component of an indirect ownership-or-control relationship? Where `isComponent` is 'true': (1) the `statementID` of this Person Statement MUST be an element in the `componentStatementIDs` array of that primary Ownership-or-control Statement, (2) this Person Statement MUST come before that primary Ownership-or-control Statement in a BODS package or stream, (3) the replacement of this Person Statement SHOULD be considered when replacing the primary Ownership-or-control Statement. The primary Ownership-or-control Statement MUST have a `isComponent` value of 'false'.",
      "type": "boolean"
    },
    "personType": {
      "title": "Person type",
      "description": "Use the personType codelist. The ultimate beneficial owner of a legal entity is always a natural person. Where the beneficial owner has been identified, but information about them cannot be disclosed, use 'anonymousPerson'. Where the beneficial owner has not been clearly identified, use 'unknownPerson'. Where the beneficial owner has been identified use knownPerson. Where a person has the type 'anonymousPerson' or 'unknownPerson' a reason for the absence of information SHOULD be provided in 'unspecifiedPersonDetails')",
      "type": "string",
      "enum": [
        "anonymousPerson",
        "unknownPerson",
        "knownPerson"
      ],
      "propertyOrder": 4,
      "codelist": "personType.csv",
      "openCodelist": false
    },
    "unspecifiedPersonDetails": {
      "title": "Unspecified person details",
      "description": "An explanation of why this person has a `personType` of 'anonymousPerson' or 'unknownPerson'. A `reason` MUST be specified.",
      "type": "object",
      "properties": {
        "reason": {
          "title": "Reason",
          "description": "The reason that an interested party cannot be specified. From the unspecifiedReason codelist.",
          "type": "string",
          "enum": [
            "noBeneficialOwners",
            "subjectUnableToConfirmOrIdentifyBeneficialOwner",
            "interestedPartyHasNotProvidedInformation",
            "subjectExemptFromDisclosure",
            "interestedPartyExemptFromDisclosure",
            "unknown",
            "informationUnknownToPublisher"
          ],
          "codelist": "unspecifiedReason.csv",
          "openCodelist": false
        },
        "description": {
          "title": "Description",
          "description": "Any supporting information about the absence of a confirmed beneficial owner. This field may be used to provide set phrases from a source system, or for a free-text explanation.",
          "type": "string"
        }
      },
      "required": [
        "reason"
      ],
      "propertyOrder": 5
    },
    "names": {
      "title": "Names",
      "description": "One or more known names for this individual.",
      "type": "array",
      "items": {
        "$ref": "components.json#/$defs/Name"
      },
      "propertyOrder": 10
    },
    "identifiers": {
      "title": "Identifiers",
      "description": "One or more official identifiers for this perrson. Where available, official registration numbers should be provided.",
      "type": "array",
      "items": {
        "$ref": "components.json#/$defs/Identifier"
      },
      "propertyOrder": 20
    },
    "nationalities": {
      "title": "Nationality",
      "description": "An array of ISO 2-Digit country codes representing nationalities held by this individual.",
      "type": "array",
      "items": {
        "$ref": "components.json#/$defs/Country"
      },
      "propertyOrder": 30
    },
    "placeOfBirth": {
      "title": "Place of birth",
      "propertyOrder": 40,
      "$ref": "components.json#/$defs/Address"
    },
    "birthDate": {
      "title": "Date of birth",
      "description": "The date of birth for this individual. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
      "type": "string",
      "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
      "propertyOrder": 35
    },
    "deathDate": {
      "title": "Death date",
      "description": "If this individual is no longer alive, provide their date of death. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
      "type": "string",
      "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
      "propertyOrder": 36
    },
    "placeOfResidence": {
      "title": "Place of residence",
      "propertyOrder": 50,
      "$ref": "components.json#/$defs/Address"
    },
    "taxResidencies": {
      "title": "Tax residency",
      "description": "An array of ISO 2-Digit country codes representing the tax residencies held by this individual.",
      "type": "array",
      "items": {
        "$ref": "components.json#/$defs/Country"
      },
      "propertyOrder": 55
    },
    "addresses": {
      "title": "Addresses",
      "description": "One or more addresses for this entity.",
      "type": "array",
      "items": {
        "$ref": "components.json#/$defs/Address"
      },
      "propertyOrder": 60
    },
    "publicationDetails": {
      "title": "Publication details",
      "description": "Information concerning the original publication of this statement.",
      "propertyOrder": 85,
      "$ref": "components.json#/$defs/PublicationDetails"
    },
    "source": {
      "title": "Source",
      "description": "The source of information about this person, or of information that supports an unknown or anonymous person statement.",
      "propertyOrder": 89,
      "$ref": "components.json#/$defs/Source"
    },
    "annotations": {
      "title": "Annotations",
      "description": "Annotations about this statement or parts of this statement",
      "type": "array",
      "items": {
        "$ref": "components.json#/$defs/Annotation"
      },
      "propertyOrder": 90
    },
    "replacesStatements": {
      "$ref": "components.json#/$defs/ReplacesStatements"
    },
    "politicalExposure": {
      "type": "object",
      "title": "Political exposure",
      "description": "Information about whether, and how, the person described by this statement is politically exposed. Use this property only if politically exposed person (PEP) declarations are expected as part of beneficial ownership declarations.",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "title": "Politically exposed person (PEP) status",
          "description": "This value is 'isPep' or 'isNotPep' according to whether the person described by this statement has the status of politically exposed person (PEP). An 'unknown' value means a PEP status declaration is expected but missing; the reason for the missing data SHOULD be supplied in the details array.",
          "enum": [
            "isPep",
            "isNotPep",
            "unknown"
          ]
        },
        "details": {
          "type": "array",
          "title": "Politically exposed person (PEP) details",
          "description": "One or more descriptions of this person's Politically Exposed Person (PEP) status.",
          "items": {
            "$ref": "components.json#/$defs/PepStatusDetails"
          }
        }
      }
    }
  },
  "required": [
    "statementID",
    "statementType",
    "personType",
    "isComponent",
    "publicationDetails"
  ]
}
