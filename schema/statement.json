{
  "$id": "urn:statement",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Statement",
  "description": "A statement",
  "version": "0.4",
  "type": "array",
  "items": {
    "$ref": "#/$defs/Statement"
  },
  "$defs": {
    "Statement": {
        "title": "Statement",
        "description": "A statement about a person, entity or relationship, made at a particular point in time.",
        "type": "object",
        "properties": {
          "statementId": {
            "title": "Statement Identifier",
            "description": "A persistent globally unique identifier for this statement.",
            "type": "string",
            "minLength": 32,
            "maxLength": 64
          },
          "statementDate": {
            "title": "Statement date",
            "description": "The date (optionally including time) on which this statement was declared by the source.",
            "type": "string",
            "anyOf": [
              {
                "format": "date"
              },
              {
                "format": "date-time"
              }
            ]
          },
          "annotations": {
            "title": "Annotations",
            "description": "Annotations about this statement or parts of this statement",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Annotation"
            }
          },
          "publicationDetails": {
            "title": "Publication Details",
            "description": "Information concerning the publication of this statement.",
            "type": "object",
            "properties": {
              "publicationDate": {
                "title": "Publication date",
                "description": "The date on which this statement was published, in YYYY-MM-DDTHH:MM:SS or YYYY-MM-DD format.",
                "type": "string",
                "anyOf": [
                  {
                    "format": "date"
                  },
                  {
                    "format": "date-time"
                  }
                ]
              },
              "bodsVersion": {
                "title": "BODS version",
                "description": "The version of the Beneficial Ownership Data Standard to which this statement conforms, expressed as major.minor. For example: 0.2 or 1.0.",
                "type": "string",
                "pattern": "^(\\d+\\.)(\\d+)$"
              },
              "license": {
                "title": "License URL",
                "description": "A link to the license that applies to this statement. The canonical URI of the license SHOULD be used. Publishers are encouraged to use a Public Domain Dedication or Open Definition Conformant (http://opendefinition.org/licenses/) license.",
                "type": "string",
                "format": "uri"
              },
              "publisher": {
                "type": "object",
                "title": "Publisher",
                "description": "Details of the organisation or individual publishing a statement.",
                "properties": {
                  "name": {
                    "title": "Name",
                    "description": "The name of the publisher",
                    "type": "string"
                  },
                  "url": {
                    "title": "URL",
                    "description": "The URL of the parent dataset or of the publisher's website homepage",
                    "type": "string",
                    "format": "uri"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "url"
                    ]
                  }
                ]
              }
            },
            "required": [
              "publicationDate",
              "bodsVersion",
              "publisher"
            ]
          },
          "source": {
            "title": "Source",
            "description": "The source of information in this statement.",
            "$ref": "#/$defs/Source"
          },
          "declaration": {
            "title": "Declaration (identifier)",
            "description": "An identifier or reference for a declaration within a publisherâ€™s system. Where a Statement is a claim from a particular declaration (made at a point in time by a `source` about a `declarationSubject`) this field should be used to identify the declaration.",
            "type": "string"
          },
          "declarationSubject": {
            "title": "Declaration subject",
            "description": "A `recordId` value for the subject of a beneficial ownership network (always an entity or person).",
            "type": "string"
          },
          "recordId": {
            "title": "Record identifier",
            "description": "A unique identifier for the record (within the publisher's system) to which this Statement relates. The identifier MUST represent the series of claims made about an entity, natural person or relationship by a particular source.",
            "type": "string"
          },
          "recordType": {
            "title": "Record type",
            "description": "The type of record (within the publisher's system) to which this Statement relates: entity, person, or relationship.",
            "type": "string",
            "enum": [
              "entity",
              "person",
              "relationship"
            ],
            "codelist": "recordType.csv",
            "openCodelist": false
          },
          "recordStatus": {
            "title": "Record status",
            "description": "The lifecycle status of the record (within the publisher's system ) to which this Statement relates, using the recordStatus codelist.",
            "type": "string",
            "enum": [
              "new",
              "updated",
              "closed"
            ],
            "codelist": "recordStatus.csv",
            "openCodelist": false
          },
          "recordDetails": {
            "title": "Record details",
            "description": "The details of the entity, person or relationship as declared on the date of the statement.",
            "type": "object"
          }
        },
        "allOf": [
          {
            "if": {
              "properties": {
                "recordType": {
                  "const": "entity"
                }
              }
            },
            "then": {
              "properties": {
                "recordDetails": {
                  "$ref": "urn:entity"
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "recordType": {
                  "const": "person"
                }
              }
            },
            "then": {
              "properties": {
                "recordDetails": {
                  "$ref": "urn:person"
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "recordType": {
                  "const": "relationship"
                }
              }
            },
            "then": {
              "properties": {
                "recordDetails": {
                  "$ref": "urn:relationship"
                }
              }
            }
          }
        ],
        "required": [
          "statementId",
          "declarationSubject",
          "recordId",
          "recordType",
          "recordDetails"
        ]
      },
    "Annotation": {
      "title": "Annotation",
      "description": "An annotation provides additional information about ownership or control data being provided. Annotations can be provided in free-text, and can apply to a whole statement, an object or a single field. Additional extended properties can be included on the annotation object to provide structured data where required.",
      "type": "object",
      "properties": {
        "statementPointerTarget": {
          "title": "Statement Fragment Pointer",
          "description": "An RFC6901 JSON Pointer (https://tools.ietf.org/html/rfc6901) describing the target fragment of the statement that this annotation applies to, starting from the root of the statement. A value of '/' indicates that the annotation applies to the whole statement.",
          "type": "string"
        },
        "creationDate": {
          "title": "Creation Date",
          "description": "The date at which this annotation was created, in YYYY-MM-DDTHH:MM:SS or YYYY-MM-DD format.",
          "type": "string",
          "anyOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "createdBy": {
          "title": "Created By",
          "description": "The person, organisation or agent that created this annotation.",
          "type": "object",
          "properties": {
            "name": {
              "title": "Name",
              "description": "The name of the person, organisation or agent that created this annotation.",
              "type": "string"
            },
            "uri": {
              "title": "URI",
              "description": "An optional URI to identify person, organisation or agent that created this annotation.",
              "type": "string",
              "format": "uri"
            }
          }
        },
        "motivation": {
          "title": "Motivation",
          "description": "The motivation for this annotation, chosen from a codelist. See the annotationMotivation codelist.",
          "type": "string",
          "enum": [
            "commenting",
            "correcting",
            "identifying",
            "linking",
            "transformation"
          ],
          "codelist": "annotationMotivation.csv",
          "openCodelist": false
        },
        "description": {
          "title": "Description",
          "description": "A free-text description to annotate this statement or field.",
          "type": "string"
        },
        "transformedContent": {
          "type": "string",
          "title": "Transformed content",
          "description": "A representation of the annotation target after the transformation in the description field has been applied. This field SHOULD only be used when the motivation is transformation."
        },
        "url": {
          "title": "URL",
          "description": "A linked resource that annotates, provides context for or enhances this statement. The content of the resource, or the relationship to the statement, MAY be described in the `description` field. This field is REQUIRED if the value of `motivation` is 'linking'.",
          "type": "string",
          "format": "uri"
        }
      },
      "if": {
        "properties": {
          "motivation": {
            "const": "linking"
          }
        }
      },
      "then": {
        "required": [
          "statementPointerTarget",
          "motivation",
          "url"
        ]
      },
      "else": {
        "required": [
          "statementPointerTarget",
          "motivation"
        ]
      }
    },
    "Source": {
      "title": "Source",
      "description": "The source object is used to explain where information in a statement originated from, and to link to supporting information.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Source type",
          "description": "What type of source is this? Multiple tags can be combined. Values should come from the source type codelist.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "selfDeclaration",
              "officialRegister",
              "thirdParty",
              "primaryResearch",
              "verified"
            ],
            "codelist": "sourceType.csv",
            "openCodelist": false
          }
        },
        "description": {
          "title": "Description",
          "description": "Where required, additional free-text information about the source of this statement can be provided here.",
          "type": "string"
        },
        "url": {
          "title": "Source URL",
          "description": "If this information was fetched from an external URL, or a machine or human readable web page is available that provides additional information on how this statement was sourced, provide the URL.",
          "type": "string",
          "format": "uri"
        },
        "retrievedAt": {
          "title": "Retrieved at",
          "description": "A timestamp indicating when this statement was imported from an external system, in YYYY-MM-DDTHH:MM:SS or YYYY-MM-DD format. (The statementDate should be set based on the source information.)",
          "type": "string",
          "anyOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "assertedBy": {
          "title": "Asserted by",
          "description": "Who is making this statement? This may be the name of the person or organisation making a self-declaration (in which case, please make sure the name field matches the organisation or person name field), or the name or description of some other party. If this statement has been verified, this may also include the name of the organisation providing verification.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "title": "Name",
                "description": "The name of the agent making the assertion",
                "type": "string"
              },
              "uri": {
                "title": "URI",
                "description": "An optional URI to identify the agent making the assertion",
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      }
    }
  }
}
